# Workflow for building and deploying multiple branches of a Next.js site to GitHub Pages
# This workflow supports deploying multiple branches, each to its own path

name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting any branch matching the pattern
  push:
    branches:
      - "**" # Include all branches
      - "!gh-pages" # Exclude gh-pages
      - "!main" # Exclude main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "2026"
        type: choice
        options:
          - "2025"
          - "2026"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write # Needed to commit to gh-pages branch
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      PRIMARY_BRANCH: "2026" # Branch that root path will redirect to
    steps:
      - name: Set branch name
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BRANCH_NAME=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi

      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # Update the next.config.js to use the correct basePath based on the branch
      - name: Update Next.js config
        run: |
          # Create a temporary file with the updated config
          cat > next.config.js.tmp << EOL
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: "export",
            basePath: "/${{ env.BRANCH_NAME }}",
            images: {
              unoptimized: true,
            },
          };

          module.exports = nextConfig;
          EOL

          # Replace the original file with the temporary one
          mv next.config.js.tmp next.config.js

      - name: Build with Next.js
        run: npx next build

      # Checkout gh-pages branch to a separate directory
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-branch
        continue-on-error: true # Continue if the branch doesn't exist yet

      # Prepare the content for deployment
      - name: Prepare deployment
        run: |
          # If gh-pages checkout failed (first deployment), create directory
          if [ ! -d "gh-pages-branch" ]; then
            mkdir -p gh-pages-branch
            touch gh-pages-branch/.nojekyll
          fi

          # Clear previous deployment for this branch if it exists
          # but don't touch other branches' deployments
          if [ -d "gh-pages-branch/${{ env.BRANCH_NAME }}" ]; then
            rm -rf "gh-pages-branch/${{ env.BRANCH_NAME }}"
          fi

          # Copy new build output to the branch-specific directory
          mkdir -p "gh-pages-branch/${{ env.BRANCH_NAME }}"
          cp -r out/* "gh-pages-branch/${{ env.BRANCH_NAME }}/"

          # Ensure .nojekyll exists
          touch gh-pages-branch/.nojekyll

          # Create/update root index.html if this is the primary branch
          if [ "${{ env.BRANCH_NAME }}" == "${{ env.PRIMARY_BRANCH }}" ]; then
            cat > gh-pages-branch/index.html << EOL
          <!DOCTYPE html>
          <html>
            <head>
              <meta http-equiv="refresh" content="0;url=/${{ env.PRIMARY_BRANCH }}" />
            </head>
            <body>
              Redirecting to <a href="/${{ env.PRIMARY_BRANCH }}">/${{ env.PRIMARY_BRANCH }}</a>
            </body>
          </html>
          EOL
          fi

      # Deploy directly to gh-pages branch
      - name: Deploy to GitHub Pages
        run: |
          cd gh-pages-branch
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Initialize repository if needed (first deployment)
          if [ ! -d .git ]; then
            git init
            git checkout -b gh-pages
            git remote add origin https://github.com/${{ github.repository }}.git
          fi

          # Stage all changes
          git add -A

          # Only commit and push if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Deploy ${{ env.BRANCH_NAME }} branch to GitHub Pages"
            git push -f origin gh-pages
          fi
